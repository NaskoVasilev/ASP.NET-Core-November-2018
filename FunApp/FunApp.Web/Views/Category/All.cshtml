@using X.PagedList.Mvc.Core; 
@using X.PagedList; 

@model IEnumerable<FunApp.Services.Models.Categories.CategoryByNameAndIdViewModel>

@{
    ViewData["Title"] = "All";
}

<h2>All</h2>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CountOfAllJokes)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CountOfAllJokes)
                </td>
                <td>
                    <a asp-controller="Joke" asp-action="ByCategory" asp-route-categoryId="@item.Id">More jokes</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("All", new { page }))
